{"ast":null,"code":"var _jsxFileName = \"/Users/bhagirath/Downloads/assignments/messy-migration/PayTabs_Assignment/frontend/src/pages/CustomerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Card, Table, Badge, Button, Navbar, Alert, Spinner, Form, Modal } from 'react-bootstrap';\nimport { customerAPI, testData } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomerDashboard = () => {\n  _s();\n  const [selectedCard, setSelectedCard] = useState('');\n  const [balance, setBalance] = useState(null);\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showTopupModal, setShowTopupModal] = useState(false);\n  const [topupAmount, setTopupAmount] = useState('');\n  const [topupPin, setTopupPin] = useState('');\n  const [topupLoading, setTopupLoading] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check if user is logged in\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\n    if (!user.username) {\n      navigate('/login');\n      return;\n    }\n\n    // Set default card for demo\n    setSelectedCard('4000123456789012');\n  }, [navigate]);\n  useEffect(() => {\n    if (selectedCard) {\n      loadCardData();\n    }\n  }, [selectedCard]);\n  const loadCardData = async () => {\n    try {\n      var _testData$cards$find;\n      setLoading(true);\n      setError('');\n\n      // For demo purposes, we'll use mock data\n      const mockBalance = ((_testData$cards$find = testData.cards.find(c => c.cardNumber === selectedCard)) === null || _testData$cards$find === void 0 ? void 0 : _testData$cards$find.balance) || 0;\n      setBalance(mockBalance);\n      const mockTransactions = [{\n        id: 1,\n        cardNumber: selectedCard,\n        type: 'WITHDRAW',\n        amount: 100.00,\n        timestamp: new Date().toISOString(),\n        status: 'SUCCESS',\n        message: 'Withdrawal successful',\n        balanceAfter: mockBalance\n      }, {\n        id: 2,\n        cardNumber: selectedCard,\n        type: 'TOPUP',\n        amount: 50.00,\n        timestamp: new Date(Date.now() - 3600000).toISOString(),\n        status: 'SUCCESS',\n        message: 'Top-up successful',\n        balanceAfter: mockBalance + 50\n      }];\n      setTransactions(mockTransactions);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to load card data');\n      setLoading(false);\n    }\n  };\n  const handleTopup = async e => {\n    e.preventDefault();\n    if (!topupAmount || !topupPin) {\n      setError('Please fill in all fields');\n      return;\n    }\n    const amount = parseFloat(topupAmount);\n    if (isNaN(amount) || amount <= 0) {\n      setError('Please enter a valid amount');\n      return;\n    }\n    try {\n      setTopupLoading(true);\n      setError('');\n\n      // For demo purposes, simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Simulate successful top-up\n      const newBalance = balance + amount;\n      setBalance(newBalance);\n\n      // Add transaction to list\n      const newTransaction = {\n        id: transactions.length + 1,\n        cardNumber: selectedCard,\n        type: 'TOPUP',\n        amount: amount,\n        timestamp: new Date().toISOString(),\n        status: 'SUCCESS',\n        message: 'Top-up successful',\n        balanceAfter: newBalance\n      };\n      setTransactions([newTransaction, ...transactions]);\n\n      // Reset form\n      setTopupAmount('');\n      setTopupPin('');\n      setShowTopupModal(false);\n      alert('Top-up successful!');\n    } catch (err) {\n      setError('Top-up failed. Please try again.');\n    } finally {\n      setTopupLoading(false);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n  const getStatusBadge = status => {\n    switch (status) {\n      case 'SUCCESS':\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"success\",\n          children: \"Success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 16\n        }, this);\n      case 'FAILED':\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"danger\",\n          children: \"Failed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 16\n        }, this);\n      case 'DECLINED':\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"warning\",\n          text: \"dark\",\n          children: \"Declined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"secondary\",\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const formatAmount = amount => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"dark\",\n      variant: \"dark\",\n      expand: \"lg\",\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          children: \"Banking System - Customer Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          className: \"justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outline-light\",\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"dashboard-container\",\n      children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Select Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              value: selectedCard,\n              onChange: e => setSelectedCard(e.target.value),\n              children: testData.cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: card.cardNumber,\n                children: [card.cardNumber, \" - \", formatAmount(card.balance)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          className: \"d-flex align-items-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => setShowTopupModal(true),\n            disabled: !selectedCard,\n            children: \"Initiate Top-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), balance !== null && /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"balance-display\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Current Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: formatAmount(balance)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Card: \", selectedCard]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mb-0\",\n                children: \"Transaction History\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(Spinner, {\n                  animation: \"border\",\n                  role: \"status\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"visually-hidden\",\n                    children: \"Loading...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-responsive\",\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  striped: true,\n                  bordered: true,\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"ID\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Amount\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 238,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Status\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 239,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Message\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 240,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Balance After\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 241,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: \"Timestamp\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: transaction.id\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 248,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: transaction.type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 249,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: formatAmount(transaction.amount)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 250,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: getStatusBadge(transaction.status)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 251,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: transaction.message\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 252,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: transaction.balanceAfter ? formatAmount(transaction.balanceAfter) : '-'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: formatDate(transaction.timestamp)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 29\n                      }, this)]\n                    }, transaction.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showTopupModal,\n      onHide: () => setShowTopupModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Initiate Top-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleTopup,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Card Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: selectedCard,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              step: \"0.01\",\n              min: \"0.01\",\n              placeholder: \"Enter amount\",\n              value: topupAmount,\n              onChange: e => setTopupAmount(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"PIN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Enter PIN\",\n              value: topupPin,\n              onChange: e => setTopupPin(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => setShowTopupModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            disabled: topupLoading,\n            children: topupLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                as: \"span\",\n                animation: \"border\",\n                size: \"sm\",\n                role: \"status\",\n                \"aria-hidden\": \"true\",\n                className: \"me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this), \"Processing...\"]\n            }, void 0, true) : 'Submit Top-up'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerDashboard, \"pzc5p5j5PQiX8y97c+EFKPOy4ZA=\", false, function () {\n  return [useNavigate];\n});\n_c = CustomerDashboard;\nexport default CustomerDashboard;\nvar _c;\n$RefreshReg$(_c, \"CustomerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Container","Row","Col","Card","Table","Badge","Button","Navbar","Alert","Spinner","Form","Modal","customerAPI","testData","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomerDashboard","_s","selectedCard","setSelectedCard","balance","setBalance","transactions","setTransactions","loading","setLoading","error","setError","showTopupModal","setShowTopupModal","topupAmount","setTopupAmount","topupPin","setTopupPin","topupLoading","setTopupLoading","navigate","user","JSON","parse","localStorage","getItem","username","loadCardData","_testData$cards$find","mockBalance","cards","find","c","cardNumber","mockTransactions","id","type","amount","timestamp","Date","toISOString","status","message","balanceAfter","now","err","handleTopup","e","preventDefault","parseFloat","isNaN","Promise","resolve","setTimeout","newBalance","newTransaction","length","alert","handleLogout","removeItem","getStatusBadge","bg","children","fileName","_jsxFileName","lineNumber","columnNumber","text","formatAmount","Intl","NumberFormat","style","currency","format","formatDate","dateString","toLocaleString","variant","expand","className","Brand","Toggle","Collapse","onClick","md","Group","Label","Select","value","onChange","target","map","card","index","disabled","Body","Header","animation","role","striped","bordered","hover","transaction","show","onHide","closeButton","Title","onSubmit","Control","step","min","placeholder","required","Footer","as","size","_c","$RefreshReg$"],"sources":["/Users/bhagirath/Downloads/assignments/messy-migration/PayTabs_Assignment/frontend/src/pages/CustomerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  Container, Row, Col, Card, Table, Badge, Button, \n  Navbar, Alert, Spinner, Form, Modal \n} from 'react-bootstrap';\nimport { customerAPI, testData } from '../services/api';\n\nconst CustomerDashboard = () => {\n  const [selectedCard, setSelectedCard] = useState('');\n  const [balance, setBalance] = useState(null);\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showTopupModal, setShowTopupModal] = useState(false);\n  const [topupAmount, setTopupAmount] = useState('');\n  const [topupPin, setTopupPin] = useState('');\n  const [topupLoading, setTopupLoading] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Check if user is logged in\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\n    if (!user.username) {\n      navigate('/login');\n      return;\n    }\n\n    // Set default card for demo\n    setSelectedCard('4000123456789012');\n  }, [navigate]);\n\n  useEffect(() => {\n    if (selectedCard) {\n      loadCardData();\n    }\n  }, [selectedCard]);\n\n  const loadCardData = async () => {\n    try {\n      setLoading(true);\n      setError('');\n\n      // For demo purposes, we'll use mock data\n      const mockBalance = testData.cards.find(c => c.cardNumber === selectedCard)?.balance || 0;\n      setBalance(mockBalance);\n\n      const mockTransactions = [\n        {\n          id: 1,\n          cardNumber: selectedCard,\n          type: 'WITHDRAW',\n          amount: 100.00,\n          timestamp: new Date().toISOString(),\n          status: 'SUCCESS',\n          message: 'Withdrawal successful',\n          balanceAfter: mockBalance\n        },\n        {\n          id: 2,\n          cardNumber: selectedCard,\n          type: 'TOPUP',\n          amount: 50.00,\n          timestamp: new Date(Date.now() - 3600000).toISOString(),\n          status: 'SUCCESS',\n          message: 'Top-up successful',\n          balanceAfter: mockBalance + 50\n        }\n      ];\n\n      setTransactions(mockTransactions);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to load card data');\n      setLoading(false);\n    }\n  };\n\n  const handleTopup = async (e) => {\n    e.preventDefault();\n    \n    if (!topupAmount || !topupPin) {\n      setError('Please fill in all fields');\n      return;\n    }\n\n    const amount = parseFloat(topupAmount);\n    if (isNaN(amount) || amount <= 0) {\n      setError('Please enter a valid amount');\n      return;\n    }\n\n    try {\n      setTopupLoading(true);\n      setError('');\n\n      // For demo purposes, simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Simulate successful top-up\n      const newBalance = balance + amount;\n      setBalance(newBalance);\n      \n      // Add transaction to list\n      const newTransaction = {\n        id: transactions.length + 1,\n        cardNumber: selectedCard,\n        type: 'TOPUP',\n        amount: amount,\n        timestamp: new Date().toISOString(),\n        status: 'SUCCESS',\n        message: 'Top-up successful',\n        balanceAfter: newBalance\n      };\n\n      setTransactions([newTransaction, ...transactions]);\n      \n      // Reset form\n      setTopupAmount('');\n      setTopupPin('');\n      setShowTopupModal(false);\n      \n      alert('Top-up successful!');\n    } catch (err) {\n      setError('Top-up failed. Please try again.');\n    } finally {\n      setTopupLoading(false);\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n\n  const getStatusBadge = (status) => {\n    switch (status) {\n      case 'SUCCESS':\n        return <Badge bg=\"success\">Success</Badge>;\n      case 'FAILED':\n        return <Badge bg=\"danger\">Failed</Badge>;\n      case 'DECLINED':\n        return <Badge bg=\"warning\" text=\"dark\">Declined</Badge>;\n      default:\n        return <Badge bg=\"secondary\">{status}</Badge>;\n    }\n  };\n\n  const formatAmount = (amount) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleString();\n  };\n\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"mb-4\">\n        <Container>\n          <Navbar.Brand>Banking System - Customer Dashboard</Navbar.Brand>\n          <Navbar.Toggle />\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Button variant=\"outline-light\" onClick={handleLogout}>\n              Logout\n            </Button>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Container className=\"dashboard-container\">\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n\n        <Row className=\"mb-4\">\n          <Col md={6}>\n            <Form.Group>\n              <Form.Label>Select Card</Form.Label>\n              <Form.Select \n                value={selectedCard} \n                onChange={(e) => setSelectedCard(e.target.value)}\n              >\n                {testData.cards.map((card, index) => (\n                  <option key={index} value={card.cardNumber}>\n                    {card.cardNumber} - {formatAmount(card.balance)}\n                  </option>\n                ))}\n              </Form.Select>\n            </Form.Group>\n          </Col>\n          <Col md={6} className=\"d-flex align-items-end\">\n            <Button \n              variant=\"primary\" \n              onClick={() => setShowTopupModal(true)}\n              disabled={!selectedCard}\n            >\n              Initiate Top-up\n            </Button>\n          </Col>\n        </Row>\n\n        {balance !== null && (\n          <Row className=\"mb-4\">\n            <Col>\n              <Card className=\"balance-display\">\n                <Card.Body>\n                  <h4>Current Balance</h4>\n                  <h2>{formatAmount(balance)}</h2>\n                  <small>Card: {selectedCard}</small>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        )}\n\n        <Row>\n          <Col>\n            <Card>\n              <Card.Header>\n                <h5 className=\"mb-0\">Transaction History</h5>\n              </Card.Header>\n              <Card.Body>\n                {loading ? (\n                  <div className=\"text-center\">\n                    <Spinner animation=\"border\" role=\"status\">\n                      <span className=\"visually-hidden\">Loading...</span>\n                    </Spinner>\n                  </div>\n                ) : (\n                  <div className=\"table-responsive\">\n                    <Table striped bordered hover>\n                      <thead>\n                        <tr>\n                          <th>ID</th>\n                          <th>Type</th>\n                          <th>Amount</th>\n                          <th>Status</th>\n                          <th>Message</th>\n                          <th>Balance After</th>\n                          <th>Timestamp</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {transactions.map((transaction) => (\n                          <tr key={transaction.id}>\n                            <td>{transaction.id}</td>\n                            <td>{transaction.type}</td>\n                            <td>{formatAmount(transaction.amount)}</td>\n                            <td>{getStatusBadge(transaction.status)}</td>\n                            <td>{transaction.message}</td>\n                            <td>\n                              {transaction.balanceAfter \n                                ? formatAmount(transaction.balanceAfter)\n                                : '-'\n                              }\n                            </td>\n                            <td>{formatDate(transaction.timestamp)}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </Table>\n                  </div>\n                )}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n\n      {/* Top-up Modal */}\n      <Modal show={showTopupModal} onHide={() => setShowTopupModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Initiate Top-up</Modal.Title>\n        </Modal.Header>\n        <Form onSubmit={handleTopup}>\n          <Modal.Body>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Card Number</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={selectedCard}\n                disabled\n              />\n            </Form.Group>\n            \n            <Form.Group className=\"mb-3\">\n              <Form.Label>Amount</Form.Label>\n              <Form.Control\n                type=\"number\"\n                step=\"0.01\"\n                min=\"0.01\"\n                placeholder=\"Enter amount\"\n                value={topupAmount}\n                onChange={(e) => setTopupAmount(e.target.value)}\n                required\n              />\n            </Form.Group>\n            \n            <Form.Group className=\"mb-3\">\n              <Form.Label>PIN</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Enter PIN\"\n                value={topupPin}\n                onChange={(e) => setTopupPin(e.target.value)}\n                required\n              />\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => setShowTopupModal(false)}>\n              Cancel\n            </Button>\n            <Button variant=\"primary\" type=\"submit\" disabled={topupLoading}>\n              {topupLoading ? (\n                <>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                    className=\"me-2\"\n                  />\n                  Processing...\n                </>\n              ) : (\n                'Submit Top-up'\n              )}\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default CustomerDashboard; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SACEC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,MAAM,EAC/CC,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAEC,IAAI,EAAEC,KAAK,QAC9B,iBAAiB;AACxB,SAASC,WAAW,EAAEC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC2B,YAAY,EAAEC,eAAe,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC+B,KAAK,EAAEC,QAAQ,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACmC,WAAW,EAAEC,cAAc,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACqC,QAAQ,EAAEC,WAAW,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuC,YAAY,EAAEC,eAAe,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMyC,QAAQ,GAAGvC,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMyC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;IAC7D,IAAI,CAACJ,IAAI,CAACK,QAAQ,EAAE;MAClBN,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;;IAEA;IACAjB,eAAe,CAAC,kBAAkB,CAAC;EACrC,CAAC,EAAE,CAACiB,QAAQ,CAAC,CAAC;EAEdxC,SAAS,CAAC,MAAM;IACd,IAAIsB,YAAY,EAAE;MAChByB,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACzB,YAAY,CAAC,CAAC;EAElB,MAAMyB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MAAA,IAAAC,oBAAA;MACFnB,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,EAAE,CAAC;;MAEZ;MACA,MAAMkB,WAAW,GAAG,EAAAD,oBAAA,GAAAjC,QAAQ,CAACmC,KAAK,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,UAAU,KAAK/B,YAAY,CAAC,cAAA0B,oBAAA,uBAAvDA,oBAAA,CAAyDxB,OAAO,KAAI,CAAC;MACzFC,UAAU,CAACwB,WAAW,CAAC;MAEvB,MAAMK,gBAAgB,GAAG,CACvB;QACEC,EAAE,EAAE,CAAC;QACLF,UAAU,EAAE/B,YAAY;QACxBkC,IAAI,EAAE,UAAU;QAChBC,MAAM,EAAE,MAAM;QACdC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACnCC,MAAM,EAAE,SAAS;QACjBC,OAAO,EAAE,uBAAuB;QAChCC,YAAY,EAAEd;MAChB,CAAC,EACD;QACEM,EAAE,EAAE,CAAC;QACLF,UAAU,EAAE/B,YAAY;QACxBkC,IAAI,EAAE,OAAO;QACbC,MAAM,EAAE,KAAK;QACbC,SAAS,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACK,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAACJ,WAAW,CAAC,CAAC;QACvDC,MAAM,EAAE,SAAS;QACjBC,OAAO,EAAE,mBAAmB;QAC5BC,YAAY,EAAEd,WAAW,GAAG;MAC9B,CAAC,CACF;MAEDtB,eAAe,CAAC2B,gBAAgB,CAAC;MACjCzB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOoC,GAAG,EAAE;MACZlC,QAAQ,CAAC,0BAA0B,CAAC;MACpCF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMqC,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAAClC,WAAW,IAAI,CAACE,QAAQ,EAAE;MAC7BL,QAAQ,CAAC,2BAA2B,CAAC;MACrC;IACF;IAEA,MAAM0B,MAAM,GAAGY,UAAU,CAACnC,WAAW,CAAC;IACtC,IAAIoC,KAAK,CAACb,MAAM,CAAC,IAAIA,MAAM,IAAI,CAAC,EAAE;MAChC1B,QAAQ,CAAC,6BAA6B,CAAC;MACvC;IACF;IAEA,IAAI;MACFQ,eAAe,CAAC,IAAI,CAAC;MACrBR,QAAQ,CAAC,EAAE,CAAC;;MAEZ;MACA,MAAM,IAAIwC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;MAEvD;MACA,MAAME,UAAU,GAAGlD,OAAO,GAAGiC,MAAM;MACnChC,UAAU,CAACiD,UAAU,CAAC;;MAEtB;MACA,MAAMC,cAAc,GAAG;QACrBpB,EAAE,EAAE7B,YAAY,CAACkD,MAAM,GAAG,CAAC;QAC3BvB,UAAU,EAAE/B,YAAY;QACxBkC,IAAI,EAAE,OAAO;QACbC,MAAM,EAAEA,MAAM;QACdC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACnCC,MAAM,EAAE,SAAS;QACjBC,OAAO,EAAE,mBAAmB;QAC5BC,YAAY,EAAEW;MAChB,CAAC;MAED/C,eAAe,CAAC,CAACgD,cAAc,EAAE,GAAGjD,YAAY,CAAC,CAAC;;MAElD;MACAS,cAAc,CAAC,EAAE,CAAC;MAClBE,WAAW,CAAC,EAAE,CAAC;MACfJ,iBAAiB,CAAC,KAAK,CAAC;MAExB4C,KAAK,CAAC,oBAAoB,CAAC;IAC7B,CAAC,CAAC,OAAOZ,GAAG,EAAE;MACZlC,QAAQ,CAAC,kCAAkC,CAAC;IAC9C,CAAC,SAAS;MACRQ,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,MAAMuC,YAAY,GAAGA,CAAA,KAAM;IACzBlC,YAAY,CAACmC,UAAU,CAAC,MAAM,CAAC;IAC/BvC,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMwC,cAAc,GAAInB,MAAM,IAAK;IACjC,QAAQA,MAAM;MACZ,KAAK,SAAS;QACZ,oBAAO5C,OAAA,CAACV,KAAK;UAAC0E,EAAE,EAAC,SAAS;UAAAC,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAC5C,KAAK,QAAQ;QACX,oBAAOrE,OAAA,CAACV,KAAK;UAAC0E,EAAE,EAAC,QAAQ;UAAAC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAC1C,KAAK,UAAU;QACb,oBAAOrE,OAAA,CAACV,KAAK;UAAC0E,EAAE,EAAC,SAAS;UAACM,IAAI,EAAC,MAAM;UAAAL,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MACzD;QACE,oBAAOrE,OAAA,CAACV,KAAK;UAAC0E,EAAE,EAAC,WAAW;UAAAC,QAAA,EAAErB;QAAM;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;IACjD;EACF,CAAC;EAED,MAAME,YAAY,GAAI/B,MAAM,IAAK;IAC/B,OAAO,IAAIgC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;MACpCC,KAAK,EAAE,UAAU;MACjBC,QAAQ,EAAE;IACZ,CAAC,CAAC,CAACC,MAAM,CAACpC,MAAM,CAAC;EACnB,CAAC;EAED,MAAMqC,UAAU,GAAIC,UAAU,IAAK;IACjC,OAAO,IAAIpC,IAAI,CAACoC,UAAU,CAAC,CAACC,cAAc,CAAC,CAAC;EAC9C,CAAC;EAED,oBACE/E,OAAA;IAAAiE,QAAA,gBACEjE,OAAA,CAACR,MAAM;MAACwE,EAAE,EAAC,MAAM;MAACgB,OAAO,EAAC,MAAM;MAACC,MAAM,EAAC,IAAI;MAACC,SAAS,EAAC,MAAM;MAAAjB,QAAA,eAC3DjE,OAAA,CAACf,SAAS;QAAAgF,QAAA,gBACRjE,OAAA,CAACR,MAAM,CAAC2F,KAAK;UAAAlB,QAAA,EAAC;QAAmC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC,eAChErE,OAAA,CAACR,MAAM,CAAC4F,MAAM;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjBrE,OAAA,CAACR,MAAM,CAAC6F,QAAQ;UAACH,SAAS,EAAC,qBAAqB;UAAAjB,QAAA,eAC9CjE,OAAA,CAACT,MAAM;YAACyF,OAAO,EAAC,eAAe;YAACM,OAAO,EAAEzB,YAAa;YAAAI,QAAA,EAAC;UAEvD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAETrE,OAAA,CAACf,SAAS;MAACiG,SAAS,EAAC,qBAAqB;MAAAjB,QAAA,GACvCpD,KAAK,iBAAIb,OAAA,CAACP,KAAK;QAACuF,OAAO,EAAC,QAAQ;QAAAf,QAAA,EAAEpD;MAAK;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAEjDrE,OAAA,CAACd,GAAG;QAACgG,SAAS,EAAC,MAAM;QAAAjB,QAAA,gBACnBjE,OAAA,CAACb,GAAG;UAACoG,EAAE,EAAE,CAAE;UAAAtB,QAAA,eACTjE,OAAA,CAACL,IAAI,CAAC6F,KAAK;YAAAvB,QAAA,gBACTjE,OAAA,CAACL,IAAI,CAAC8F,KAAK;cAAAxB,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACpCrE,OAAA,CAACL,IAAI,CAAC+F,MAAM;cACVC,KAAK,EAAEtF,YAAa;cACpBuF,QAAQ,EAAG1C,CAAC,IAAK5C,eAAe,CAAC4C,CAAC,CAAC2C,MAAM,CAACF,KAAK,CAAE;cAAA1B,QAAA,EAEhDnE,QAAQ,CAACmC,KAAK,CAAC6D,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC9BhG,OAAA;gBAAoB2F,KAAK,EAAEI,IAAI,CAAC3D,UAAW;gBAAA6B,QAAA,GACxC8B,IAAI,CAAC3D,UAAU,EAAC,KAAG,EAACmC,YAAY,CAACwB,IAAI,CAACxF,OAAO,CAAC;cAAA,GADpCyF,KAAK;gBAAA9B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEV,CACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACS,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACNrE,OAAA,CAACb,GAAG;UAACoG,EAAE,EAAE,CAAE;UAACL,SAAS,EAAC,wBAAwB;UAAAjB,QAAA,eAC5CjE,OAAA,CAACT,MAAM;YACLyF,OAAO,EAAC,SAAS;YACjBM,OAAO,EAAEA,CAAA,KAAMtE,iBAAiB,CAAC,IAAI,CAAE;YACvCiF,QAAQ,EAAE,CAAC5F,YAAa;YAAA4D,QAAA,EACzB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAEL9D,OAAO,KAAK,IAAI,iBACfP,OAAA,CAACd,GAAG;QAACgG,SAAS,EAAC,MAAM;QAAAjB,QAAA,eACnBjE,OAAA,CAACb,GAAG;UAAA8E,QAAA,eACFjE,OAAA,CAACZ,IAAI;YAAC8F,SAAS,EAAC,iBAAiB;YAAAjB,QAAA,eAC/BjE,OAAA,CAACZ,IAAI,CAAC8G,IAAI;cAAAjC,QAAA,gBACRjE,OAAA;gBAAAiE,QAAA,EAAI;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACxBrE,OAAA;gBAAAiE,QAAA,EAAKM,YAAY,CAAChE,OAAO;cAAC;gBAAA2D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAChCrE,OAAA;gBAAAiE,QAAA,GAAO,QAAM,EAAC5D,YAAY;cAAA;gBAAA6D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAEDrE,OAAA,CAACd,GAAG;QAAA+E,QAAA,eACFjE,OAAA,CAACb,GAAG;UAAA8E,QAAA,eACFjE,OAAA,CAACZ,IAAI;YAAA6E,QAAA,gBACHjE,OAAA,CAACZ,IAAI,CAAC+G,MAAM;cAAAlC,QAAA,eACVjE,OAAA;gBAAIkF,SAAS,EAAC,MAAM;gBAAAjB,QAAA,EAAC;cAAmB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eACdrE,OAAA,CAACZ,IAAI,CAAC8G,IAAI;cAAAjC,QAAA,EACPtD,OAAO,gBACNX,OAAA;gBAAKkF,SAAS,EAAC,aAAa;gBAAAjB,QAAA,eAC1BjE,OAAA,CAACN,OAAO;kBAAC0G,SAAS,EAAC,QAAQ;kBAACC,IAAI,EAAC,QAAQ;kBAAApC,QAAA,eACvCjE,OAAA;oBAAMkF,SAAS,EAAC,iBAAiB;oBAAAjB,QAAA,EAAC;kBAAU;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5C;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC,gBAENrE,OAAA;gBAAKkF,SAAS,EAAC,kBAAkB;gBAAAjB,QAAA,eAC/BjE,OAAA,CAACX,KAAK;kBAACiH,OAAO;kBAACC,QAAQ;kBAACC,KAAK;kBAAAvC,QAAA,gBAC3BjE,OAAA;oBAAAiE,QAAA,eACEjE,OAAA;sBAAAiE,QAAA,gBACEjE,OAAA;wBAAAiE,QAAA,EAAI;sBAAE;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC,eACXrE,OAAA;wBAAAiE,QAAA,EAAI;sBAAI;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC,eACbrE,OAAA;wBAAAiE,QAAA,EAAI;sBAAM;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC,eACfrE,OAAA;wBAAAiE,QAAA,EAAI;sBAAM;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC,eACfrE,OAAA;wBAAAiE,QAAA,EAAI;sBAAO;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC,eAChBrE,OAAA;wBAAAiE,QAAA,EAAI;sBAAa;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC,eACtBrE,OAAA;wBAAAiE,QAAA,EAAI;sBAAS;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAChB;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACA,CAAC,eACRrE,OAAA;oBAAAiE,QAAA,EACGxD,YAAY,CAACqF,GAAG,CAAEW,WAAW,iBAC5BzG,OAAA;sBAAAiE,QAAA,gBACEjE,OAAA;wBAAAiE,QAAA,EAAKwC,WAAW,CAACnE;sBAAE;wBAAA4B,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAK,CAAC,eACzBrE,OAAA;wBAAAiE,QAAA,EAAKwC,WAAW,CAAClE;sBAAI;wBAAA2B,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAK,CAAC,eAC3BrE,OAAA;wBAAAiE,QAAA,EAAKM,YAAY,CAACkC,WAAW,CAACjE,MAAM;sBAAC;wBAAA0B,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAK,CAAC,eAC3CrE,OAAA;wBAAAiE,QAAA,EAAKF,cAAc,CAAC0C,WAAW,CAAC7D,MAAM;sBAAC;wBAAAsB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAK,CAAC,eAC7CrE,OAAA;wBAAAiE,QAAA,EAAKwC,WAAW,CAAC5D;sBAAO;wBAAAqB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAK,CAAC,eAC9BrE,OAAA;wBAAAiE,QAAA,EACGwC,WAAW,CAAC3D,YAAY,GACrByB,YAAY,CAACkC,WAAW,CAAC3D,YAAY,CAAC,GACtC;sBAAG;wBAAAoB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAEL,CAAC,eACLrE,OAAA;wBAAAiE,QAAA,EAAKY,UAAU,CAAC4B,WAAW,CAAChE,SAAS;sBAAC;wBAAAyB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAK,CAAC;oBAAA,GAZrCoC,WAAW,CAACnE,EAAE;sBAAA4B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAanB,CACL;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACG,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL;YACN;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eAGZrE,OAAA,CAACJ,KAAK;MAAC8G,IAAI,EAAE3F,cAAe;MAAC4F,MAAM,EAAEA,CAAA,KAAM3F,iBAAiB,CAAC,KAAK,CAAE;MAAAiD,QAAA,gBAClEjE,OAAA,CAACJ,KAAK,CAACuG,MAAM;QAACS,WAAW;QAAA3C,QAAA,eACvBjE,OAAA,CAACJ,KAAK,CAACiH,KAAK;UAAA5C,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACfrE,OAAA,CAACL,IAAI;QAACmH,QAAQ,EAAE7D,WAAY;QAAAgB,QAAA,gBAC1BjE,OAAA,CAACJ,KAAK,CAACsG,IAAI;UAAAjC,QAAA,gBACTjE,OAAA,CAACL,IAAI,CAAC6F,KAAK;YAACN,SAAS,EAAC,MAAM;YAAAjB,QAAA,gBAC1BjE,OAAA,CAACL,IAAI,CAAC8F,KAAK;cAAAxB,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACpCrE,OAAA,CAACL,IAAI,CAACoH,OAAO;cACXxE,IAAI,EAAC,MAAM;cACXoD,KAAK,EAAEtF,YAAa;cACpB4F,QAAQ;YAAA;cAAA/B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC,eAEbrE,OAAA,CAACL,IAAI,CAAC6F,KAAK;YAACN,SAAS,EAAC,MAAM;YAAAjB,QAAA,gBAC1BjE,OAAA,CAACL,IAAI,CAAC8F,KAAK;cAAAxB,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC/BrE,OAAA,CAACL,IAAI,CAACoH,OAAO;cACXxE,IAAI,EAAC,QAAQ;cACbyE,IAAI,EAAC,MAAM;cACXC,GAAG,EAAC,MAAM;cACVC,WAAW,EAAC,cAAc;cAC1BvB,KAAK,EAAE1E,WAAY;cACnB2E,QAAQ,EAAG1C,CAAC,IAAKhC,cAAc,CAACgC,CAAC,CAAC2C,MAAM,CAACF,KAAK,CAAE;cAChDwB,QAAQ;YAAA;cAAAjD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC,eAEbrE,OAAA,CAACL,IAAI,CAAC6F,KAAK;YAACN,SAAS,EAAC,MAAM;YAAAjB,QAAA,gBAC1BjE,OAAA,CAACL,IAAI,CAAC8F,KAAK;cAAAxB,QAAA,EAAC;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC5BrE,OAAA,CAACL,IAAI,CAACoH,OAAO;cACXxE,IAAI,EAAC,UAAU;cACf2E,WAAW,EAAC,WAAW;cACvBvB,KAAK,EAAExE,QAAS;cAChByE,QAAQ,EAAG1C,CAAC,IAAK9B,WAAW,CAAC8B,CAAC,CAAC2C,MAAM,CAACF,KAAK,CAAE;cAC7CwB,QAAQ;YAAA;cAAAjD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACbrE,OAAA,CAACJ,KAAK,CAACwH,MAAM;UAAAnD,QAAA,gBACXjE,OAAA,CAACT,MAAM;YAACyF,OAAO,EAAC,WAAW;YAACM,OAAO,EAAEA,CAAA,KAAMtE,iBAAiB,CAAC,KAAK,CAAE;YAAAiD,QAAA,EAAC;UAErE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTrE,OAAA,CAACT,MAAM;YAACyF,OAAO,EAAC,SAAS;YAACzC,IAAI,EAAC,QAAQ;YAAC0D,QAAQ,EAAE5E,YAAa;YAAA4C,QAAA,EAC5D5C,YAAY,gBACXrB,OAAA,CAAAE,SAAA;cAAA+D,QAAA,gBACEjE,OAAA,CAACN,OAAO;gBACN2H,EAAE,EAAC,MAAM;gBACTjB,SAAS,EAAC,QAAQ;gBAClBkB,IAAI,EAAC,IAAI;gBACTjB,IAAI,EAAC,QAAQ;gBACb,eAAY,MAAM;gBAClBnB,SAAS,EAAC;cAAM;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjB,CAAC,iBAEJ;YAAA,eAAE,CAAC,GAEH;UACD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACjE,EAAA,CAzUID,iBAAiB;EAAA,QAUJnB,WAAW;AAAA;AAAAuI,EAAA,GAVxBpH,iBAAiB;AA2UvB,eAAeA,iBAAiB;AAAC,IAAAoH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}